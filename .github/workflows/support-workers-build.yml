name: Build support-workers

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  GU_SUPPORT_WORKERS_LOAD_S3_CONFIG: false

jobs:
  support_workers_build:
    if: >-
      (github.actor != 'dependabot[bot]') &&
        (github.repository_owner == 'guardian' ||
          github.event_name == 'push')

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    name: support-workers build
    runs-on: ubuntu-latest
    steps:
      - name: Env
        run: env

      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Node and Install Dependencies
        uses: ./.github/actions/setup-node-and-install

      - name: Build CFN from CDK
        run: ./script/ci
        working-directory: cdk

      - name: Build TypeScript lambdas
        run: pnpm --filter support-workers package

      - uses: sbt/setup-sbt@v1

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
          cache: sbt

      # There are two separate build in the support-workers project
      # - the integration tests build which is uploaded so it can be run in a lambda
      # - the support-workers build
      - name: Build integration test assembly
        run: |
          sbt "project support-workers" it:assembly

      - name: Build support-workers assembly
        run: |
          sbt "project support-workers" test assembly

      - name: Upload to riff-raff
        uses: guardian/actions-riff-raff@v4
        with:
          projectName: support:support-workers-mono
          roleArn: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          buildNumberOffset: 12000
          config: |
            stacks: [support]
            regions: [eu-west-1]
            allowedStages:
              - CODE
              - PROD
            deployments:
              cfn:
                type: cloud-formation
                app: workers
                parameters:
                  templateStagePaths:
                    CODE: SupportWorkers-CODE.template.json
                    PROD: SupportWorkers-PROD.template.json
              support-workers-scala:
                type: aws-lambda
                parameters:
                  functionNames:
                    - "-CreateZuoraSubscriptionLambda-"
                    - "-SendThankYouEmailLambda-"
                    - "-UpdateSupporterProductDataLambda-"
                    - "-FailureHandlerLambda-"
                    - "-SendAcquisitionEventLambda-"
                  fileName: support-workers.jar
                dependencies: [cfn]
              support-workers-typescript:
                type: aws-lambda
                parameters:
                  functionNames:
                    - "-CreateSalesforceContactLambda-"
                    - "-CreatePaymentMethodLambda-"
                  fileName: support-workers.zip
                dependencies: [cfn]
              it-tests:
                type: aws-s3
                parameters:
                  cacheControl: private
                  publicReadAcl: false
          contentDirectories: |
              cfn:
                - cdk/cdk.out/SupportWorkers-CODE.template.json
                - cdk/cdk.out/SupportWorkers-PROD.template.json
              support-workers-scala:
                - support-workers/target/scala-2.13/support-workers.jar
              support-workers-typescript:
                - support-workers/target/typescript/support-workers.zip
              it-tests:
                - support-workers/target/scala-2.13/support-workers-it.jar
