AWSTemplateFormatVersion: "2010-09-09"
Description: "support-workers state machine"

Parameters:
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
        - PROD
        - CODE
    Default: CODE
  Stack:
    Description: Stack name
    Type: String
    Default: support
Conditions:
  CreateProdResources: !Equals [!Ref "Stage", "PROD"]
  CreateCodeResources: !Equals [!Ref "Stage", "CODE"]
Mappings:
  StageVariables:
    CODE:
      DynamoDBTables:
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-CODE
      S3Files:
      - arn:aws:s3:::gu-zuora-catalog/PROD/Zuora-CODE/catalog.json
      - arn:aws:s3:::support-workers-private/*
      SupporterProductDataTable: supporter-product-data-tables-CODE-SupporterProductDataTable
      KinesisStreamArn: arn:aws:kinesis:eu-west-1:865473395570:stream/acquisitions-stream-CODE
      EventBusArns:
      - arn:aws:events:eu-west-1:865473395570:event-bus/acquisitions-bus-CODE
    PROD:
      DynamoDBTables:
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-PROD
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-CODE
      S3Files:
      - arn:aws:s3:::gu-zuora-catalog/PROD/Zuora-PROD/catalog.json
      - arn:aws:s3:::gu-zuora-catalog/PROD/Zuora-CODE/catalog.json
      - arn:aws:s3:::support-workers-private/*
      SupporterProductDataTable: supporter-product-data-tables-PROD-SupporterProductDataTable
      KinesisStreamArn: arn:aws:kinesis:eu-west-1:865473395570:stream/acquisitions-stream-PROD
      EventBusArns:
      - arn:aws:events:eu-west-1:865473395570:event-bus/acquisitions-bus-PROD
      - arn:aws:events:eu-west-1:865473395570:event-bus/acquisitions-bus-CODE
Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: S3Buckets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: s3:GetObject
              Resource: !FindInMap [StageVariables, !Ref Stage, S3Files]
        - PolicyName: SqsMessages
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - sqs:GetQueueUrl
              - sqs:SendMessage
              Resource:
                Fn::ImportValue: !Sub "comms-${Stage}-EmailQueueArn"
        - PolicyName: AcquisitionsEventBus
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - events:PutEvents
              Resource: !FindInMap [StageVariables, !Ref Stage, EventBusArns]
        - PolicyName: CloudWatchLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - logs:Create*
              - logs:PutLogEvents
              - logs:DescribeLogStreams
              - cloudwatch:putMetricData
              Resource: "*"
              Effect: Allow
        - PolicyName: AssumeOphanRole
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Resource:
                Ref: OphanRole
        - PolicyName: Kinesis
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: kinesis:*
              Resource: !FindInMap [StageVariables, !Ref Stage, KinesisStreamArn]
        - PolicyName: DynamoPromotions
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DescribeTable
              Resource: !FindInMap [StageVariables, !Ref Stage, DynamoDBTables]
        - PolicyName: SupporterProductDataDynamoTable
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              Resource:
              - Fn::ImportValue: supporter-product-data-tables-CODE-SupporterProductDataTable
              - Fn::ImportValue: !FindInMap [ StageVariables, !Ref Stage, SupporterProductDataTable ]
  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: !Sub states.${AWS::Region}.amazonaws.com
          Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  {{#lambdas}}
  {{> lambda}}
  {{/lambdas}}

  SupportWorkersPROD:
    Type: "AWS::StepFunctions::StateMachine"
    Condition: CreateProdResources
    Properties:
      StateMachineName: !Sub support-workers-${Stage}
      DefinitionString:
        !Sub
          - |-
            {{> stateMachine}}

          - {}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]

  SupportWorkersCODE:
    Type: "AWS::StepFunctions::StateMachine"
    Condition: CreateCodeResources
    Properties:
      StateMachineName: !Sub support-workers-${Stage}
      DefinitionString:
        !Sub
          - |-
            {{> stateMachine}}

          - {}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]

  ExecutionFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alarms-handler-topic-${Stage}
      AlarmName: !Sub Support Workers Failure in ${Stage} (Recurring Contributions or Subscriptions Checkout)
      AlarmDescription: !Sub There was a failure whilst setting up recurring payments after the user attempted to complete a checkout process. Check https://eu-west-1.console.aws.amazon.com/states/home?region=eu-west-1#/statemachines/view/arn:aws:states:eu-west-1:865473395570:stateMachine:support-workers-${Stage}?statusFilter=FAILED
      MetricName: ExecutionsFailed
      Namespace: AWS/States
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref SupportWorkersPROD
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      Statistic: Sum
    DependsOn: SupportWorkersPROD

  TimeoutAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alarms-handler-topic-${Stage}
      AlarmName: !Sub Support Workers Timeout in ${Stage} (Recurring Contributions or Subscriptions Checkout)
      AlarmDescription: An execution of the Support Workers state machine has taken an excessively long time to complete
      MetricName: ExecutionsTimedOut
      Namespace: AWS/States
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref SupportWorkersPROD
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      Statistic: Sum
    DependsOn: SupportWorkersPROD

# This query is useful to check what a reasonable interval is for each product if you
# want the alarm to go off less than once a month.  Update the date range to get more current figures.
#
#  with timegaps as(
#  select
#  product,
#  if (print_options.product is null, null, if(print_options.product = 'GUARDIAN_WEEKLY', 'WEEKLY', 'NEWSPAPER')) print_product,
#  payment_provider,
#  e.event_timestamp,
#  (lag(e.event_timestamp) over (partition by payment_provider, product order by event_timestamp)) as last_acquisition,
#  from `datalake.fact_acquisition_event` e
#  where 1=1
#  and date(e.event_timestamp) >= date'2024-03-01' -- keep it after 1st March 2024 as the outage caused a S+ gap
#  and payment_provider in ('STRIPE', 'GOCARDLESS', 'PAYPAL')
#  and product in ('RECURRING_CONTRIBUTION', 'PRINT_SUBSCRIPTION', 'SUPPORTER_PLUS')
#  )
#  select
#  product,
#  print_product,
#  payment_provider,
#  max(timestamp_diff(event_timestamp, last_acquisition, HOUR)) max_diff,
#  from timegaps
#  group by 1,2,3
#  order by 1,2,3
  NoPaypalContributionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring paypal contributions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: PayPal
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 4
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoStripeContributionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring stripe contributions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: Stripe
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 3
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoGocardlessContributionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring Gocardless contributions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: DirectDebit
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 16
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoPaypalSupporterPlusAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful paypal supporter plus acquisitions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: PayPal
        - Name: ProductType
          Value: SupporterPlus
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 6
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoStripeSupporterPlusAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful stripe supporter plus acquisitions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: Stripe
        - Name: ProductType
          Value: SupporterPlus
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 3
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoGocardlessSupporterPlusAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful Gocardless supporter plus acquisitions recently
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: DirectDebit
        - Name: ProductType
          Value: SupporterPlus
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 14
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  # This alarm is for the PaymentSuccess metric where
  # ProductType == Paper AND PaymentProvider in [Stripe, Gocardless, Paypal]

  NoPaperAcquisitionInOneDayAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alarms-handler-topic-${Stage}
      AlarmName: !Sub URGENT 9-5 - ${Stage} support-workers No successful paper checkouts in 24h
      Metrics:
        - Id: e1
          Expression: "SUM([FILL(m1,0),FILL(m2,0),FILL(m3,0)])"
          Label: AllPaperConversions
        - Id: m1
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: Stripe
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m2
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: DirectDebit
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m3
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: PayPal
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 288
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoWeeklyAcquisitionInOneDayAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alarms-handler-topic-${Stage}
      AlarmName: !Sub URGENT 9-5 - ${Stage} support-workers No successful guardian weekly checkouts in 8h
      Metrics:
        - Id: e1
          Expression: "SUM([FILL(m1,0),FILL(m2,0),FILL(m3,0)])"
          Label: AllWeeklyConversions
        - Id: m1
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: Stripe
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m2
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: DirectDebit
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m3
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: PayPal
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 96
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD
